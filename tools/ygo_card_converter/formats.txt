#define ITEM_PACK_YUGI_KAIBA 1836
#define ITEM_PACK_CRITTER 1837
#define ITEM_PACK_TREASURE 1838
#define ITEM_PACK_IMPERIAL 1839
#define ITEM_PACK_ANDROID 1840
#define ITEM_PACK_JOEY_PEGASUS 1841
#define ITEM_PACK_FIBER 1842
#define ITEM_PACK_YATA 1843
#define ITEM_PACK_SCIENTIST 1844
#define ITEM_PACK_VAMPIRE 1845
#define ITEM_PACK_CHAOS 1846
#define ITEM_PACK_WARRIOR 1847
#define ITEM_PACK_GOAT 1848
#define ITEM_PACK_CYBER 1849
#define ITEM_PACK_REAPER 1850
#define ITEM_PACK_CHAOS_RETURN 1851
#define ITEM_PACK_DEMISE 1852
#define ITEM_PACK_TROOPER 1853
#define ITEM_PACK_ZOMBIE 1854
#define ITEM_PACK_PERFECT_CIRCLE 1855
#define ITEM_PACK_DAD_RETURN 1856
#define ITEM_PACK_GLADIATOR 1857
#define ITEM_PACK_TELEDAD 1858
#define ITEM_PACK_CAT 1859
#define ITEM_PACK_EDISON 1860
#define ITEM_PACK_FROG 1861
#define ITEM_PACK_STARSTRIKE 1862
#define ITEM_PACK_TENGU 1863
#define ITEM_PACK_DINO_RABBIT 1864
#define ITEM_PACK_WIND_UP 1865
#define ITEM_PACK_MIAMI 1866
#define ITEM_PACK_MEADOWLANDS 1867
#define ITEM_PACK_BABY_RULER 1868
#define ITEM_PACK_RAVINE_RULER 1869
#define ITEM_PACK_FIRE_WATER 1870
#define ITEM_PACK_HAT 1871
#define ITEM_PACK_VEGAS 1872

#define PACK_YUGI_KAIBA 990
#define PACK_CRITTER 991
#define PACK_TREASURE 992
#define PACK_IMPERIAL 993
#define PACK_ANDROID 994
#define PACK_JOEY_PEGASUS 995
#define PACK_FIBER 996
#define PACK_YATA 997
#define PACK_SCIENTIST 998
#define PACK_VAMPIRE 999
#define PACK_CHAOS 1000
#define PACK_WARRIOR 1001
#define PACK_GOAT 1002
#define PACK_CYBER 1003
#define PACK_REAPER 1004
#define PACK_CHAOS_RETURN 1005
#define PACK_DEMISE 1006
#define PACK_TROOPER 1007
#define PACK_ZOMBIE 1008
#define PACK_PERFECT_CIRCLE 1009
#define PACK_DAD_RETURN 1010
#define PACK_GLADIATOR 1011
#define PACK_TELEDAD 1012
#define PACK_CAT 1013
#define PACK_EDISON 1014
#define PACK_FROG 1015
#define PACK_STARSTRIKE 1016
#define PACK_TENGU 1017
#define PACK_DINO_RABBIT 1018
#define PACK_WIND_UP 1019
#define PACK_MIAMI 1020
#define PACK_MEADOWLANDS 1021
#define PACK_BABY_RULER 1022
#define PACK_RAVINE_RULER 1023
#define PACK_FIRE_WATER 1024
#define PACK_HAT 1025
#define PACK_VEGAS 1026
	[ITEM_PACK_YUGI_KAIBA] = 990,
	[ITEM_PACK_CRITTER] = 991,
	[ITEM_PACK_TREASURE] = 992,
	[ITEM_PACK_IMPERIAL] = 993,
	[ITEM_PACK_ANDROID] = 994,
	[ITEM_PACK_JOEY_PEGASUS] = 995,
	[ITEM_PACK_FIBER] = 996,
	[ITEM_PACK_YATA] = 997,
	[ITEM_PACK_SCIENTIST] = 998,
	[ITEM_PACK_VAMPIRE] = 999,
	[ITEM_PACK_CHAOS] = 1000,
	[ITEM_PACK_WARRIOR] = 1001,
	[ITEM_PACK_GOAT] = 1002,
	[ITEM_PACK_CYBER] = 1003,
	[ITEM_PACK_REAPER] = 1004,
	[ITEM_PACK_CHAOS_RETURN] = 1005,
	[ITEM_PACK_DEMISE] = 1006,
	[ITEM_PACK_TROOPER] = 1007,
	[ITEM_PACK_ZOMBIE] = 1008,
	[ITEM_PACK_PERFECT_CIRCLE] = 1009,
	[ITEM_PACK_DAD_RETURN] = 1010,
	[ITEM_PACK_GLADIATOR] = 1011,
	[ITEM_PACK_TELEDAD] = 1012,
	[ITEM_PACK_CAT] = 1013,
	[ITEM_PACK_EDISON] = 1014,
	[ITEM_PACK_FROG] = 1015,
	[ITEM_PACK_STARSTRIKE] = 1016,
	[ITEM_PACK_TENGU] = 1017,
	[ITEM_PACK_DINO_RABBIT] = 1018,
	[ITEM_PACK_WIND_UP] = 1019,
	[ITEM_PACK_MIAMI] = 1020,
	[ITEM_PACK_MEADOWLANDS] = 1021,
	[ITEM_PACK_BABY_RULER] = 1022,
	[ITEM_PACK_RAVINE_RULER] = 1023,
	[ITEM_PACK_FIRE_WATER] = 1024,
	[ITEM_PACK_HAT] = 1025,
	[ITEM_PACK_VEGAS] = 1026,
	[ITEM_PACK_YUGI_KAIBA] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_CRITTER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_TREASURE] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_IMPERIAL] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_ANDROID] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_JOEY_PEGASUS] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_FIBER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_YATA] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_SCIENTIST] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_VAMPIRE] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_CHAOS] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_WARRIOR] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_GOAT] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_CYBER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_REAPER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_CHAOS_RETURN] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_DEMISE] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_TROOPER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_ZOMBIE] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_PERFECT_CIRCLE] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_DAD_RETURN] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_GLADIATOR] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_TELEDAD] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_CAT] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_EDISON] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_FROG] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_STARSTRIKE] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_TENGU] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_DINO_RABBIT] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_WIND_UP] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_MIAMI] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_MEADOWLANDS] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_BABY_RULER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_RAVINE_RULER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_FIRE_WATER] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_HAT] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_VEGAS] = {gItemIcon_QuestionMark, gItemIconPalette_QuestionMark},
	[ITEM_PACK_YUGI_KAIBA] =
    {
        .name = _("Yugi-Kaiba"),
        .itemId = ITEM_PACK_YUGI_KAIBA,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_CRITTER] =
    {
        .name = _("Critter"),
        .itemId = ITEM_PACK_CRITTER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_TREASURE] =
    {
        .name = _("Treasure"),
        .itemId = ITEM_PACK_TREASURE,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_IMPERIAL] =
    {
        .name = _("Imperial"),
        .itemId = ITEM_PACK_IMPERIAL,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_ANDROID] =
    {
        .name = _("Android"),
        .itemId = ITEM_PACK_ANDROID,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_JOEY_PEGASUS] =
    {
        .name = _("Joey-Pegasus"),
        .itemId = ITEM_PACK_JOEY_PEGASUS,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_FIBER] =
    {
        .name = _("Fiber"),
        .itemId = ITEM_PACK_FIBER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_YATA] =
    {
        .name = _("Yata"),
        .itemId = ITEM_PACK_YATA,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_SCIENTIST] =
    {
        .name = _("Scientist"),
        .itemId = ITEM_PACK_SCIENTIST,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_VAMPIRE] =
    {
        .name = _("Vampire"),
        .itemId = ITEM_PACK_VAMPIRE,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_CHAOS] =
    {
        .name = _("Chaos"),
        .itemId = ITEM_PACK_CHAOS,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_WARRIOR] =
    {
        .name = _("Warrior"),
        .itemId = ITEM_PACK_WARRIOR,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_GOAT] =
    {
        .name = _("Goat"),
        .itemId = ITEM_PACK_GOAT,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_CYBER] =
    {
        .name = _("Cyber"),
        .itemId = ITEM_PACK_CYBER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_REAPER] =
    {
        .name = _("Reaper"),
        .itemId = ITEM_PACK_REAPER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_CHAOS_RETURN] =
    {
        .name = _("Chaos Return"),
        .itemId = ITEM_PACK_CHAOS_RETURN,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_DEMISE] =
    {
        .name = _("Demise"),
        .itemId = ITEM_PACK_DEMISE,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_TROOPER] =
    {
        .name = _("Trooper"),
        .itemId = ITEM_PACK_TROOPER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_ZOMBIE] =
    {
        .name = _("Zombie"),
        .itemId = ITEM_PACK_ZOMBIE,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_PERFECT_CIRCLE] =
    {
        .name = _("Perfect Circl"),
        .itemId = ITEM_PACK_PERFECT_CIRCLE,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_DAD_RETURN] =
    {
        .name = _("DAD Return"),
        .itemId = ITEM_PACK_DAD_RETURN,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_GLADIATOR] =
    {
        .name = _("Gladiator"),
        .itemId = ITEM_PACK_GLADIATOR,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_TELEDAD] =
    {
        .name = _("TeleDAD"),
        .itemId = ITEM_PACK_TELEDAD,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_CAT] =
    {
        .name = _("Cat"),
        .itemId = ITEM_PACK_CAT,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_EDISON] =
    {
        .name = _("Edison"),
        .itemId = ITEM_PACK_EDISON,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_FROG] =
    {
        .name = _("Frog"),
        .itemId = ITEM_PACK_FROG,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_STARSTRIKE] =
    {
        .name = _("Starstrike"),
        .itemId = ITEM_PACK_STARSTRIKE,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_TENGU] =
    {
        .name = _("Tengu"),
        .itemId = ITEM_PACK_TENGU,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_DINO_RABBIT] =
    {
        .name = _("Dino Rabbit"),
        .itemId = ITEM_PACK_DINO_RABBIT,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_WIND_UP] =
    {
        .name = _("Wind-Up"),
        .itemId = ITEM_PACK_WIND_UP,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_MIAMI] =
    {
        .name = _("Miami"),
        .itemId = ITEM_PACK_MIAMI,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_MEADOWLANDS] =
    {
        .name = _("Meadowlands"),
        .itemId = ITEM_PACK_MEADOWLANDS,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_BABY_RULER] =
    {
        .name = _("Baby Ruler"),
        .itemId = ITEM_PACK_BABY_RULER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_RAVINE_RULER] =
    {
        .name = _("Ravine Ruler"),
        .itemId = ITEM_PACK_RAVINE_RULER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_FIRE_WATER] =
    {
        .name = _("Fire-Water"),
        .itemId = ITEM_PACK_FIRE_WATER,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_HAT] =
    {
        .name = _("HAT"),
        .itemId = ITEM_PACK_HAT,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

	[ITEM_PACK_VEGAS] =
    {
        .name = _("Vegas"),
        .itemId = ITEM_PACK_VEGAS,
        .price = 0,
        .description = sDummyDesc,
        .pocket = POCKET_ITEMS,
        .type = ITEM_USE_FIELD,
        .fieldUseFunc = ItemUseOutOfBattle_Pack,
    },

    else if (pack == PACK_YUGI_KAIBA)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceYugiKaiba)
            {
                j += 1000 - gCardInfo[i].priceYugiKaiba;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceYugiKaiba;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_CRITTER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceCritter)
            {
                j += 1000 - gCardInfo[i].priceCritter;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceCritter;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_TREASURE)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceTreasure)
            {
                j += 1000 - gCardInfo[i].priceTreasure;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceTreasure;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_IMPERIAL)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceImperial)
            {
                j += 1000 - gCardInfo[i].priceImperial;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceImperial;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_ANDROID)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceAndroid)
            {
                j += 1000 - gCardInfo[i].priceAndroid;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceAndroid;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_JOEY_PEGASUS)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceJoeyPegasus)
            {
                j += 1000 - gCardInfo[i].priceJoeyPegasus;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceJoeyPegasus;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_FIBER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceFiber)
            {
                j += 1000 - gCardInfo[i].priceFiber;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceFiber;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_YATA)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceYata)
            {
                j += 1000 - gCardInfo[i].priceYata;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceYata;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_SCIENTIST)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceScientist)
            {
                j += 1000 - gCardInfo[i].priceScientist;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceScientist;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_VAMPIRE)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceVampire)
            {
                j += 1000 - gCardInfo[i].priceVampire;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceVampire;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_CHAOS)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceChaos)
            {
                j += 1000 - gCardInfo[i].priceChaos;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceChaos;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_WARRIOR)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceWarrior)
            {
                j += 1000 - gCardInfo[i].priceWarrior;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceWarrior;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_GOAT)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceGoat)
            {
                j += 1000 - gCardInfo[i].priceGoat;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceGoat;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_CYBER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceCyber)
            {
                j += 1000 - gCardInfo[i].priceCyber;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceCyber;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_REAPER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceReaper)
            {
                j += 1000 - gCardInfo[i].priceReaper;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceReaper;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_CHAOS_RETURN)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceChaosReturn)
            {
                j += 1000 - gCardInfo[i].priceChaosReturn;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceChaosReturn;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_DEMISE)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceDemise)
            {
                j += 1000 - gCardInfo[i].priceDemise;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceDemise;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_TROOPER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceTrooper)
            {
                j += 1000 - gCardInfo[i].priceTrooper;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceTrooper;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_ZOMBIE)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceZombie)
            {
                j += 1000 - gCardInfo[i].priceZombie;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceZombie;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_PERFECT_CIRCLE)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].pricePerfectCircle)
            {
                j += 1000 - gCardInfo[i].pricePerfectCircle;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].pricePerfectCircle;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_DAD_RETURN)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceDADReturn)
            {
                j += 1000 - gCardInfo[i].priceDADReturn;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceDADReturn;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_GLADIATOR)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceGladiator)
            {
                j += 1000 - gCardInfo[i].priceGladiator;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceGladiator;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_TELEDAD)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceTeleDAD)
            {
                j += 1000 - gCardInfo[i].priceTeleDAD;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceTeleDAD;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_CAT)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceCat)
            {
                j += 1000 - gCardInfo[i].priceCat;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceCat;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_EDISON)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceEdison)
            {
                j += 1000 - gCardInfo[i].priceEdison;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceEdison;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_FROG)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceFrog)
            {
                j += 1000 - gCardInfo[i].priceFrog;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceFrog;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_STARSTRIKE)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceStarstrike)
            {
                j += 1000 - gCardInfo[i].priceStarstrike;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceStarstrike;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_TENGU)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceTengu)
            {
                j += 1000 - gCardInfo[i].priceTengu;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceTengu;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_DINO_RABBIT)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceDinoRabbit)
            {
                j += 1000 - gCardInfo[i].priceDinoRabbit;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceDinoRabbit;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_WIND_UP)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceWindUp)
            {
                j += 1000 - gCardInfo[i].priceWindUp;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceWindUp;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_MIAMI)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceMiami)
            {
                j += 1000 - gCardInfo[i].priceMiami;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceMiami;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_MEADOWLANDS)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceMeadowlands)
            {
                j += 1000 - gCardInfo[i].priceMeadowlands;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceMeadowlands;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_BABY_RULER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceBabyRuler)
            {
                j += 1000 - gCardInfo[i].priceBabyRuler;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceBabyRuler;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_RAVINE_RULER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceRavineRuler)
            {
                j += 1000 - gCardInfo[i].priceRavineRuler;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceRavineRuler;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_FIRE_WATER)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceFireWater)
            {
                j += 1000 - gCardInfo[i].priceFireWater;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceFireWater;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_HAT)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceHAT)
            {
                j += 1000 - gCardInfo[i].priceHAT;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceHAT;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
    else if (pack == PACK_VEGAS)
    {
        u16 cards[NUM_CARDS];
        for (i = 0; i < NUM_CARDS; i++)
        {
            if (gCardInfo[i].priceVegas)
            {
                j += 1000 - gCardInfo[i].priceVegas;
                cards[length] = i;
                length += 1;
            }
        }
        for (k = 0; k < 5; k++)
        {
            random = Random() % j;
            l = random;
            for (i = 0; i < length; i++)
            {
                u16 rarity = 1000 - gCardInfo[cards[i]].priceVegas;
                u16 card = cards[i];
                l -= rarity;
                if (l <= rarity)
                {
                    if (k == 0)
                        gSpecialVar_0x8004 = card + 376;
                    else if (k == 1)
                        gSpecialVar_0x8005 = card + 376;
                    else if (k == 2)
                        gSpecialVar_0x8006 = card + 376;
                    else if (k == 3)
                        gSpecialVar_0x8007 = card + 376;
                    else if (k == 4)
                        gSpecialVar_0x8008 = card + 376;
                    break;
                }
            }
        }
    }
